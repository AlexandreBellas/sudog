name: Deploy workflow
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-deploy:
    name: Frontend deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./app
        run: npm install

      # @see https://github.com/nativewind/nativewind/issues/593#issuecomment-2355681096
      - name: Generate NativeWind CSS
        working-directory: ./app
        run: npx tailwindcss -i ./global.css -o ./node_modules/.cache/nativewind/global.css

      - name: Build
        working-directory: ./app
        run: npm run export:web

      - name: Upload via FTP
        uses: airvzxf/ftp-deployment-action@latest
        with:
          server: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local_dir: "./app/dist"

  backend-deploy:
    name: Backend deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Create .env file
        working-directory: ./server
        run: |
          touch .env
          echo APP_NAME=sudog-server >> .env
          echo APP_KEY="${{ secrets.APP_KEY }}" >> .env
          echo APP_ENV=production >> .env
          echo APP_DEBUG=false >> .env
          echo APP_URL=https://sudog.alebatistella.com/api >> .env
          echo APP_TIMEZONE=UTC >> .env

          echo DB_CONNECTION="${{ secrets.DB_CONNECTION }}" >> .env
          echo DB_HOST="${{ secrets.DB_HOST }}" >> .env
          echo DB_PORT="${{ secrets.DB_PORT }}" >> .env
          echo DB_DATABASE="${{ secrets.DB_DATABASE }}" >> .env
          echo DB_USERNAME="${{ secrets.DB_USERNAME }}" >> .env
          echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> .env

      - name: Install/update Composer dependencies
        working-directory: ./server
        run: composer update

      - name: Run composer autoload
        working-directory: ./server
        run: composer dump-autoload

      - name: Run tests
        working-directory: ./server
        run: ./vendor/bin/phpunit

      - name: Run migrations
        working-directory: ./server
        run: php artisan migrate --force --seed

      - name: Zip deploy files to ./build/deploy.tar
        continue-on-error: true
        working-directory: ./server
        run: |
          if [ -d "./build" ]; then rm -r "./build"; fi
          mkdir ./build
          tar --exclude=".git" --exclude="./**/.gitignore" -pcvf ./build/deploy.tar .

      - name: Upload via FTP
        uses: airvzxf/ftp-deployment-action@latest
        with:
          server: ${{ secrets.FTP_SERVER_BACKEND }}
          user: ${{ secrets.FTP_USERNAME_BACKEND }}
          password: ${{ secrets.FTP_PASSWORD_BACKEND }}
          local_dir: "./server/build"

      - name: Unzip deploy files + optimize
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_REMOTE_HOST }}
          username: ${{ secrets.SSH_REMOTE_USER }}
          password: ${{ secrets.SSH_REMOTE_PASSWORD }}
          port: ${{ secrets.SSH_REMOTE_PORT }}
          script: |
            cd /home/u787668067/domains/sudog-api.alebatistella.com/public_html
            tar -xf deploy.tar
            rm deploy.tar
            php artisan optimize
